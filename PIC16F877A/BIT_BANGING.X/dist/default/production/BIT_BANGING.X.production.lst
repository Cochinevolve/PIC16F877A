

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Aug 12 14:56:58 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 12/10/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0008                     	;# 
    55     0009                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     0088                     	;# 
    86     0089                     	;# 
    87     008C                     	;# 
    88     008D                     	;# 
    89     008E                     	;# 
    90     0091                     	;# 
    91     0092                     	;# 
    92     0093                     	;# 
    93     0094                     	;# 
    94     0098                     	;# 
    95     0099                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     009F                     	;# 
   100     010C                     	;# 
   101     010D                     	;# 
   102     010E                     	;# 
   103     010F                     	;# 
   104     018C                     	;# 
   105     018D                     	;# 
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     0088                     	;# 
   146     0089                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     0091                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0094                     	;# 
   154     0098                     	;# 
   155     0099                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     009F                     	;# 
   160     010C                     	;# 
   161     010D                     	;# 
   162     010E                     	;# 
   163     010F                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166     0008                     _PORTD	set	8
   167     0040                     _RD0	set	64
   168     0088                     _TRISD	set	136
   169                           
   170                           	psect	cinit
   171     07FC                     start_initialization:	
   172                           ; #config settings
   173                           
   174     07FC                     __initialization:
   175     07FC                     end_of_initialization:	
   176                           ;End of C runtime variable initialization code
   177                           
   178     07FC                     __end_of__initialization:
   179     07FC  0183               	clrf	3
   180     07FD  120A  118A  2F80   	ljmp	_main	;jump to C main() function
   181                           
   182                           	psect	cstackCOMMON
   183     0070                     __pcstackCOMMON:
   184     0070                     ?_init_config:
   185     0070                     ??_init_config:	
   186                           ; 1 bytes @ 0x0
   187                           
   188     0070                     ?_main:	
   189                           ; 1 bytes @ 0x0
   190                           
   191     0070                     ??_main:	
   192                           ; 1 bytes @ 0x0
   193                           
   194                           
   195                           ; 1 bytes @ 0x0
   196     0070                     	ds	4
   197                           
   198                           	psect	cstackBANK0
   199     0020                     __pcstackBANK0:
   200     0020                     main@period:
   201                           
   202                           ; 4 bytes @ 0x0
   203     0020                     	ds	4
   204     0024                     main@duty_cycle:
   205                           
   206                           ; 4 bytes @ 0x4
   207     0024                     	ds	4
   208     0028                     main@loop_counter:
   209                           
   210                           ; 4 bytes @ 0x8
   211     0028                     	ds	4
   212                           
   213                           	psect	maintext
   214     0780                     __pmaintext:	
   215 ;;
   216 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   217 ;;
   218 ;; *************** function _main *****************
   219 ;; Defined at:
   220 ;;		line 21 in file "main.c"
   221 ;; Parameters:    Size  Location     Type
   222 ;;		None
   223 ;; Auto vars:     Size  Location     Type
   224 ;;  loop_counter    4    8[BANK0 ] unsigned long 
   225 ;;  duty_cycle      4    4[BANK0 ] unsigned long 
   226 ;;  period          4    0[BANK0 ] unsigned long 
   227 ;; Return value:  Size  Location     Type
   228 ;;                  1    wreg      void 
   229 ;; Registers used:
   230 ;;		wreg, status,2, status,0, pclath, cstack
   231 ;; Tracked objects:
   232 ;;		On entry : B00/0
   233 ;;		On exit  : 0/0
   234 ;;		Unchanged: 0/0
   235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   236 ;;      Params:         0       0       0       0       0
   237 ;;      Locals:         0      12       0       0       0
   238 ;;      Temps:          4       0       0       0       0
   239 ;;      Totals:         4      12       0       0       0
   240 ;;Total ram usage:       16 bytes
   241 ;; Hardware stack levels required when called: 1
   242 ;; This function calls:
   243 ;;		_init_config
   244 ;; This function is called by:
   245 ;;		Startup code after reset
   246 ;; This function uses a non-reentrant model
   247 ;;
   248                           
   249     0780                     _main:	
   250                           ;psect for function _main
   251                           
   252     0780                     l580:	
   253                           ;incstack = 0
   254                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   255                           
   256                           
   257                           ;main.c: 22:         }
   258     0780  3000               	movlw	0
   259     0781  1283               	bcf	3,5	;RP0=0, select bank0
   260     0782  1303               	bcf	3,6	;RP1=0, select bank0
   261     0783  00A3               	movwf	main@period+3
   262     0784  3001               	movlw	1
   263     0785  00A2               	movwf	main@period+2
   264     0786  3086               	movlw	134
   265     0787  00A1               	movwf	main@period+1
   266     0788  30A0               	movlw	160
   267     0789  00A0               	movwf	main@period
   268                           
   269                           ;main.c: 23:         if(loop_counter++ == period)
   270     078A  3000               	movlw	0
   271     078B  00A7               	movwf	main@duty_cycle+3
   272     078C  3000               	movlw	0
   273     078D  00A6               	movwf	main@duty_cycle+2
   274     078E  30C3               	movlw	195
   275     078F  00A5               	movwf	main@duty_cycle+1
   276     0790  3050               	movlw	80
   277     0791  00A4               	movwf	main@duty_cycle
   278                           
   279                           ;main.c: 24:             loop_counter = 0;
   280     0792  3000               	movlw	0
   281     0793  00AB               	movwf	main@loop_counter+3
   282     0794  3000               	movlw	0
   283     0795  00AA               	movwf	main@loop_counter+2
   284     0796  3000               	movlw	0
   285     0797  00A9               	movwf	main@loop_counter+1
   286     0798  3000               	movlw	0
   287     0799  00A8               	movwf	main@loop_counter
   288     079A                     l582:
   289                           
   290                           ;main.c: 25:     }
   291     079A  120A  118A  2779  120A  118A  	fcall	_init_config
   292     079F                     l584:
   293     079F  1283               	bcf	3,5	;RP0=0, select bank0
   294     07A0  1303               	bcf	3,6	;RP1=0, select bank0
   295     07A1  0827               	movf	main@duty_cycle+3,w
   296     07A2  022B               	subwf	main@loop_counter+3,w
   297     07A3  1D03               	skipz
   298     07A4  2FAF               	goto	u45
   299     07A5  0826               	movf	main@duty_cycle+2,w
   300     07A6  022A               	subwf	main@loop_counter+2,w
   301     07A7  1D03               	skipz
   302     07A8  2FAF               	goto	u45
   303     07A9  0825               	movf	main@duty_cycle+1,w
   304     07AA  0229               	subwf	main@loop_counter+1,w
   305     07AB  1D03               	skipz
   306     07AC  2FAF               	goto	u45
   307     07AD  0824               	movf	main@duty_cycle,w
   308     07AE  0228               	subwf	main@loop_counter,w
   309     07AF                     u45:
   310     07AF  1803               	skipnc
   311     07B0  2FB2               	goto	u41
   312     07B1  2FB3               	goto	u40
   313     07B2                     u41:
   314     07B2  2FB5               	goto	l15
   315     07B3                     u40:
   316     07B3                     l586:
   317     07B3  1408               	bsf	8,0	;volatile
   318     07B4  2FB6               	goto	l588
   319     07B5                     l15:
   320     07B5  1008               	bcf	8,0	;volatile
   321     07B6                     l588:
   322     07B6  3001               	movlw	1
   323     07B7  07A8               	addwf	main@loop_counter,f
   324     07B8  3000               	movlw	0
   325     07B9  1803               	skipnc
   326     07BA  3001               	movlw	1
   327     07BB  07A9               	addwf	main@loop_counter+1,f
   328     07BC  3000               	movlw	0
   329     07BD  1803               	skipnc
   330     07BE  3001               	movlw	1
   331     07BF  07AA               	addwf	main@loop_counter+2,f
   332     07C0  3000               	movlw	0
   333     07C1  1803               	skipnc
   334     07C2  3001               	movlw	1
   335     07C3  07AB               	addwf	main@loop_counter+3,f
   336     07C4  3001               	movlw	1
   337     07C5  00F0               	movwf	??_main
   338     07C6  3000               	movlw	0
   339     07C7  00F1               	movwf	??_main+1
   340     07C8  3000               	movlw	0
   341     07C9  00F2               	movwf	??_main+2
   342     07CA  3000               	movlw	0
   343     07CB  00F3               	movwf	??_main+3
   344     07CC  0820               	movf	main@period,w
   345     07CD  07F0               	addwf	??_main,f
   346     07CE  0821               	movf	main@period+1,w
   347     07CF  1803               	skipnc
   348     07D0  0F21               	incfsz	main@period+1,w
   349     07D1  2FD3               	goto	u50
   350     07D2  2FD4               	goto	u51
   351     07D3                     u50:
   352     07D3  07F1               	addwf	??_main+1,f
   353     07D4                     u51:
   354     07D4  0822               	movf	main@period+2,w
   355     07D5  1803               	skipnc
   356     07D6  0F22               	incfsz	main@period+2,w
   357     07D7  2FD9               	goto	u52
   358     07D8  2FDA               	goto	u53
   359     07D9                     u52:
   360     07D9  07F2               	addwf	??_main+2,f
   361     07DA                     u53:
   362     07DA  0823               	movf	main@period+3,w
   363     07DB  1803               	skipnc
   364     07DC  0A23               	incf	main@period+3,w
   365     07DD  07F3               	addwf	??_main+3,f
   366     07DE  082B               	movf	main@loop_counter+3,w
   367     07DF  0673               	xorwf	??_main+3,w
   368     07E0  1D03               	skipz
   369     07E1  2FEC               	goto	u65
   370     07E2  082A               	movf	main@loop_counter+2,w
   371     07E3  0672               	xorwf	??_main+2,w
   372     07E4  1D03               	skipz
   373     07E5  2FEC               	goto	u65
   374     07E6  0829               	movf	main@loop_counter+1,w
   375     07E7  0671               	xorwf	??_main+1,w
   376     07E8  1D03               	skipz
   377     07E9  2FEC               	goto	u65
   378     07EA  0828               	movf	main@loop_counter,w
   379     07EB  0670               	xorwf	??_main,w
   380     07EC                     u65:
   381     07EC  1D03               	skipz
   382     07ED  2FEF               	goto	u61
   383     07EE  2FF0               	goto	u60
   384     07EF                     u61:
   385     07EF  2F9F               	goto	l584
   386     07F0                     u60:
   387     07F0                     l590:
   388     07F0  3000               	movlw	0
   389     07F1  00AB               	movwf	main@loop_counter+3
   390     07F2  3000               	movlw	0
   391     07F3  00AA               	movwf	main@loop_counter+2
   392     07F4  3000               	movlw	0
   393     07F5  00A9               	movwf	main@loop_counter+1
   394     07F6  3000               	movlw	0
   395     07F7  00A8               	movwf	main@loop_counter
   396     07F8  2F9F               	goto	l584
   397     07F9  120A  118A  2800   	ljmp	start
   398     07FC                     __end_of_main:
   399                           
   400                           	psect	text1
   401     0779                     __ptext1:	
   402 ;; *************** function _init_config *****************
   403 ;; Defined at:
   404 ;;		line 14 in file "main.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;		None
   407 ;; Auto vars:     Size  Location     Type
   408 ;;		None
   409 ;; Return value:  Size  Location     Type
   410 ;;                  1    wreg      void 
   411 ;; Registers used:
   412 ;;		status,2
   413 ;; Tracked objects:
   414 ;;		On entry : 0/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   418 ;;      Params:         0       0       0       0       0
   419 ;;      Locals:         0       0       0       0       0
   420 ;;      Temps:          0       0       0       0       0
   421 ;;      Totals:         0       0       0       0       0
   422 ;;Total ram usage:        0 bytes
   423 ;; Hardware stack levels used: 1
   424 ;; This function calls:
   425 ;;		Nothing
   426 ;; This function is called by:
   427 ;;		_main
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431     0779                     _init_config:	
   432                           ;psect for function _init_config
   433                           
   434     0779                     l578:	
   435                           ;incstack = 0
   436                           ; Regs used in _init_config: [status,2]
   437                           
   438                           
   439                           ;main.c: 16:         {
   440     0779  1683               	bsf	3,5	;RP0=1, select bank1
   441     077A  1303               	bcf	3,6	;RP1=0, select bank1
   442     077B  0188               	clrf	8	;volatile
   443                           
   444                           ;main.c: 17:             RD0 = 1;
   445     077C  1283               	bcf	3,5	;RP0=0, select bank0
   446     077D  1303               	bcf	3,6	;RP1=0, select bank0
   447     077E  0188               	clrf	8	;volatile
   448     077F                     l9:
   449     077F  0008               	return
   450     0780                     __end_of_init_config:
   451     007E                     btemp	set	126	;btemp
   452     007E                     wtemp0	set	126
   453                           
   454                           	psect	config
   455                           
   456                           ;Config register CONFIG @ 0x2007
   457                           ;	Oscillator Selection bits
   458                           ;	FOSC = 0x3, unprogrammed default
   459                           ;	Watchdog Timer Enable bit
   460                           ;	WDTE = OFF, WDT disabled
   461                           ;	Power-up Timer Enable bit
   462                           ;	PWRTE = 0x1, unprogrammed default
   463                           ;	Brown-out Reset Enable bit
   464                           ;	BOREN = 0x1, unprogrammed default
   465                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   466                           ;	LVP = 0x1, unprogrammed default
   467                           ;	Data EEPROM Memory Code Protection bit
   468                           ;	CPD = 0x1, unprogrammed default
   469                           ;	Flash Program Memory Write Enable bits
   470                           ;	WRT = 0x3, unprogrammed default
   471                           ;	In-Circuit Debugger Mode bit
   472                           ;	DEBUG = 0x1, unprogrammed default
   473                           ;	Flash Program Memory Code Protection bit
   474                           ;	CP = 0x1, unprogrammed default
   475     2007                     	org	8199
   476     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80     12      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0      92
                                              0 COMMON     4     4      0
                                              0 BANK0     12    12      0
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_config

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C       C       5       15.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Aug 12 14:56:58 2025

                      l9 077F                       l15 07B5                       u40 07B3  
                     u41 07B2                       u50 07D3                       u51 07D4  
                     u60 07F0                       u52 07D9                       u61 07EF  
                     u53 07DA                       u45 07AF                       u65 07EC  
                    l580 0780                      l590 07F0                      l582 079A  
                    l584 079F                      l578 0779                      l586 07B3  
                    l588 07B6                      _RD0 0040                     _main 0780  
                   btemp 007E                     start 0000                    ?_main 0070  
           ?_init_config 0070                    _PORTD 0008                    _TRISD 0088  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 0780           main@duty_cycle 0024  
                __ptext1 0779     end_of_initialization 07FC               main@period 0020  
    start_initialization 07FC            ??_init_config 0070                ___latbits 0002  
          __pcstackBANK0 0020         main@loop_counter 0028      __end_of_init_config 0780  
            _init_config 0779  
